#!/usr/bin/perl

use 5.16.0;

use Carp;
use Data::Dumper;
use IO::File;
use Text::Template;

our $VERSION = '0.0.1';

my $infile = shift @ARGV || 'kitty.var';
my $outfile = 'kitty.pl';

my $VAR1;

sub dump_read {
    my $ifh = IO::File->new($infile, '<');
    croak if (!defined $ifh);

    my $contents = join('',<$ifh>);
    $ifh->close;

    my $data = eval $contents; ## no critic
    if ( !defined $data ) {
        croak "failed eval of dump";
    }
    return;
}

my $open_delimiter  = '[<';
my $close_delimiter = '>]';
my $template = Text::Template->new(
    SOURCE     => 'kitty.t',
    DELIMITERS => [ $open_delimiter, $close_delimiter ],
) or die "Couldn't construct template: $Text::Template::ERROR";

dump_read();
my %vars = %$VAR1;

my $result = $template->fill_in(HASH => \%vars);

if (! defined $result) {
    die "Couldn't fill in template: $Text::Template::ERROR";
}

my $ofh = IO::File->new($outfile, '>');
die if (!defined $ofh);

print $ofh "$result";
$ofh->close;

